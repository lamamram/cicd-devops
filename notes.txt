installer un projet maven existant
pistes 
=> pom.xml (clic droit => reload projects)
=> src/main/<package>/BankApplication.java => run
=> si erreur => fix => clean workspace => re run => popup java (admin) => OK


H2:
 1/ application.properties
 2/ security => requestMatchers => /console/**
 3/ entity all names && constructor

TESTS api
=> list       :  curl -X GET localhost:8081/api/accounts  => []
=> creation   :  curl -H "Content-Type: application/json" -X POST -d '{"title": "truc", "balance": "100.", "overdraft": "-100."}'  localhost:8081/api/accounts 
=> list       :  => [{...}]
=> item 1     :  curl -X GET localhost:8081/api/accounts/1 => [{...}]
=> item title :  curl -X GET localhost:8081/api/accounts/title/truc => [{...}]

HINT: utilise 
Ouais bg,

Lombok, c‚Äôest un super outil pour Java qui te simplifie la vie en automatisant du code r√©p√©titif. Voici pourquoi c‚Äôest cool :

üöÄ Moins de code, plus d‚Äôefficacit√©
Au lieu d‚Äô√©crire √† la main les getters, setters, constructeurs et autres trucs barbants, tu mets juste une annotation comme @Getter ou @AllArgsConstructor, et Lombok s‚Äôoccupe du reste.

üéØ Un code plus propre et lisible
Fini les centaines de lignes inutiles ! Ton code reste court et clair, ce qui le rend plus facile √† maintenir et √† comprendre.

‚è≥ Gain de temps √©norme
Moins de temps pass√© √† taper du code r√©p√©titif = plus de temps pour le vrai d√©veloppement. Et √ßa, c‚Äôest le feu. üî•

Bref, Lombok, c‚Äôest comme un assistant magique qui fait le sale boulot √† ta place. Tu codes plus vite et mieux, tout en gardant tes cheveux sur la t√™te. üòé

TESTING:
G√©n√©rer un test √† partir du code
=> surligner la classe de code > clic droit > (vscode) go to test > generate Tests > classe > m√©thodes

=> la d√©pendance Spring Boot Starter Test Dependdency
contient: JUnit, Hamcrest, Mockito, and AssertJ

=> sur Vscode, l'erreur IllegalState : can't create ContextApplication et r√©solue par 
   le r√©glage "boot-java.live-information.automatic-connection.on": false, dans le settings.json
   Cause: live-reload de l'extension Spring Boot Tools